paths:
  /inventories:
    post:
      tags:
        - Inventories
      summary: Create part for inventory
      description: Endpoint to create a part for inventory, this is a token authenticated route, and the mechanic must be logged in to create a part.
      security:
        - bearerAuth: []
      parameters:
        - in: "body"
          name: "body"
          description: Information required to create a inventory part.
          required: true
          schema:
            $ref: "#/definitions/CreateInventoryPartPayload"
      responses:
        200:
          description: Successfully created inventory part
          schema:
            $ref: "#/definitions/InventoryPart"
          examples:
            application/json:
              id: 1
              part_name: "Headlight"
              price: 5.99
              quantity: 1
        400:
          description: Bad request - one or more fields failed validation.
          schema:
            type: object
            properties:
              message:
                type: string
          examples:
            application/json:
              case1:
                part_name: "Name must be at least 2 characters long"
                price: "Not a valid number"
                quantity: "Not a valid integer"
              case2:
                price: "Price must be at least 0.01"
                quantity: "Quantity must be at least 1"
        401:
          $ref: "./base.yaml#/responses/UnauthorizedError"

    get:
      tags:
        - Inventories
      summary: Get all parts in inventory
      description: Endpoint to get all part from inventory
      responses:
        200:
          description: Retireved all inventory parts
          schema:
            $ref: "#/definitions/AllInventoryPartsResponse"
          examples:
            application/json:
              case1:
                - id: 1
                  part_name: "Headlight"
                  price: 10
                  quantity: 19
                - id: 2
                  part_name: "Tail Light"
                  price: 12
                  quantity: 15
              case2:
                message: "There are no parts in the system."

  /inventories/{part_id}:
    parameters:
      - name: part_id
        in: path
        required: true
        type: integer
        description: The ID of the part to retrieve
    get:
      tags:
        - Inventories
      summary: Get part in inventory
      description: Endpoint to get a part from inventory

      responses:
        200:
          description: Retireved inventory part
          schema:
            $ref: "#/definitions/InventoryPart"
          examples:
            application/json:
              case1:
                id: 2
                part_name: "Tail Light"
                price: 12
                quantity: 15
        404:
          description: Part with specified ID not found
          schema:
            type: object
            properties:
              message:
                type: string
          examples:
            message: "Invalid part id"

    put:
      tags:
        - Inventories
      summary: "Endpoint to update a part in inventory, can enter one or more fields"
      description: "Endpoint to update a inventory part, this is a token authenticated route, and the mechanic must be logged in to update the part."
      security:
        - bearerAuth: []
      parameters:
        - in: body
          name: body
          description: "Information to update an inventory part, can be one or more fields."
          required: true
          schema:
            type: object
            properties:
              part_name:
                type: string
              price:
                type: number
                format: float
              quantity:
                type: integer
      responses:
        200:
          description: "Successfully Updated inventory part"
          schema:
            $ref: "#/definitions/InventoryPart"
          examples:
            application/json:
              id: 1
              part_name: "Headlight"
              price: 5.99
              quantity: 1
        400:
          description: Bad request - one or more fields failed validation.
          schema:
            type: object
            properties:
              message:
                type: string
          examples:
            application/json:
              case1:
                part_name: "Name must be at least 2 characters long"
                price: "Not a valid number"
                quantity: "Not a valid integer"
              case2:
                price: "Price must be at least 0.01"
                quantity: "Quantity must be at least 1"
        401:
          $ref: "./base.yaml#/responses/UnauthorizedError"

    delete:
      tags:
        - Inventories
      summary: "Endpoint to delete a inventory part"
      description: "Endpoint to delete a inventory part, requires token authentication, mechanic must be logged in to delete the part from inventory."
      security:
        - bearerAuth: []

      responses:
        200:
          description: "Successfully deleted inventory part"
          schema:
            type: object
            properties:
              message:
                type: string
          examples:
            application/json:
              message: "Successfully deleted part id <part_id>: part_name"
        401:
          $ref: "./base.yaml#/responses/UnauthorizedError"
        404:
          description: Part with specified ID not found
          schema:
            type: object
            properties:
              message:
                type: string
          examples:
            message: "Invalid part id"

definitions:
  CreateInventoryPartPayload:
    type: object
    properties:
      part_name:
        type: string
      price:
        type: number
        format: float
      quantity:
        type: integer

  InventoryPart:
    type: object
    properties:
      id:
        type: integer
      part_name:
        type: string
      price:
        type: number
        format: float
      quantity:
        type: integer

  AllInventoryPartsResponse:
    type: array
    items:
      $ref: "#/definitions/InventoryPart"
